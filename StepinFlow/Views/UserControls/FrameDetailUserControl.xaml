<UserControl
    x:Class="StepinFlow.Views.UserControls.FrameDetailUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="clr-namespace:Model.Enums;assembly=Model"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:StepinFlow.Views.UserControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Grid VerticalAlignment="Top">


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <StackPanel>


            <!--  Display this combobox for flow steps.  -->
            <Label Visibility="{Binding FlowStepVisibility}">Flow step type:</Label>
            <ComboBox
                IsEnabled="{Binding IsEnabled}"
                ItemsSource="{Binding FlowStepTypes}"
                SelectedItem="{Binding SelectedFlowStepType, Mode=TwoWay}"
                Visibility="{Binding FlowStepVisibility}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding TypeSelectionChangedCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding TypeSelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <!--  Or this combobox for flow parameters.  -->
            <Label Visibility="{Binding FlowParameterVisibility}">Flow parameter</Label>
            <ComboBox
                IsEnabled="{Binding IsEnabled}"
                ItemsSource="{Binding FlowParameterTypes}"
                SelectedItem="{Binding SelectedFlowParameterType, Mode=TwoWay}"
                Visibility="{Binding FlowParameterVisibility}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding TypeSelectionChangedCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding TypeSelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <!--  Or this combobox for flows.  -->
            <Label Visibility="{Binding FlowVisibility}">Flow type</Label>
            <ComboBox
                IsEnabled="{Binding IsEnabled}"
                ItemsSource="{Binding FlowTypes}"
                SelectedItem="{Binding SelectedFlowType, Mode=TwoWay}"
                Visibility="{Binding FlowVisibility}" />


            <!--  Seperator  -->
            <Rectangle
                Height="1"
                Margin="20"
                HorizontalAlignment="Stretch"
                Fill="White" />

            <!--  Frame  -->
            <Frame Content="{Binding Frame}" />

            <!--  Save/Cancel  -->
            <Grid Margin="0,50,0,0" Visibility="{Binding SaveVisibility}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel HorizontalAlignment="Left">
                    <Button Content="Cancel">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ButtonCancelClickCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </StackPanel>

                <StackPanel HorizontalAlignment="right">
                    <Button Content="Save">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ButtonSaveClickCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </StackPanel>
            </Grid>

        </StackPanel>
    </Grid>
</UserControl>
