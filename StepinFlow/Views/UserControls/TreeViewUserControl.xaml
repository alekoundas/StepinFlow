<UserControl
    x:Class="StepinFlow.Views.UserControls.TreeViewUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:behavior="clr-namespace:StepinFlow.Behavior"
    xmlns:converters="clr-namespace:StepinFlow.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="clr-namespace:Model.Enums;assembly=Model"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:icons="https://github.com/helluvamatt/BootstrapIcons.Wpf/"
    xmlns:local="clr-namespace:StepinFlow.Views.UserControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Model.Models;assembly=Model"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:GroupedCollectionConverter x:Key="GroupedCollectionConverter" />
        <converters:TreeviewOrdering x:Key="TreeviewOrdering" />
        <ObjectDataProvider
            x:Key="FlowStepTypesEnum"
            MethodName="GetValues"
            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:FlowStepTypesEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            x:Key="FlowParameterTypesEnum"
            MethodName="GetValues"
            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:FlowParameterTypesEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
        <PathGeometry x:Key="TreeArrow" Figures="M1,0 L0,6 L6,0 z" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />


        <!--  expander style  -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Width="16"
                            Height="16"
                            Padding="5,5,5,5"
                            Background="Transparent">
                            <Path
                                x:Name="ExpandPath"
                                Data="{StaticResource TreeArrow}"
                                Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                                Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
                                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
                                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  TreeViewItem style  -->
        <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="1,0,0,0" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="behavior:ScrollToSelectedTreeviewItemBehavior.IsBroughtIntoViewWhenSelected" Value="True" />

            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ToggleButton
                                x:Name="Expander"
                                IsChecked="{Binding IsExpanded}"
                                Style="{StaticResource ExpandCollapseToggleStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ExpandedCommand}">
                                            <i:InvokeCommandAction.CommandParameter>
                                                <Binding Path="" />
                                            </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.CollapsedCommand}">
                                            <i:InvokeCommandAction.CommandParameter>
                                                <Binding Path="" />
                                            </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ToggleButton>
                            <Border
                                x:Name="FlowStepBorder"
                                Grid.Column="1"
                                Padding="{TemplateBinding Padding}"
                                Background="#25272a"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="PART_Header"
                                    HorizontalAlignment="Stretch"
                                    ContentSource="Header"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ItemsPresenter
                                x:Name="ItemsHost"
                                Grid.Row="1"
                                Grid.Column="1" />

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="FlowStepBorder" Property="Background" Value="#303236" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:FlowStepTypesEnum.NEW}">
                                <Setter TargetName="FlowStepBorder" Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="Padding" Value="0,0,0,10" />
                                <Setter Property="Focusable" Value="False" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Type}" Value="{x:Static enum:FlowStepTypesEnum.NEW}" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="FlowStepBorder" Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Type}" Value="{x:Static enum:FlowParameterTypesEnum.NEW}" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="FlowStepBorder" Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding IsExpanded}" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="ItemsHost" Property="Width" Value="50" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2" />
                </Style>
            </Style.Resources>
        </Style>


    </UserControl.Resources>


    <Grid>

        <TreeView
            x:Name="FlowsTreeview"
            HorizontalContentAlignment="Stretch"
            AllowDrop="True"
            ItemContainerStyle="{StaticResource TreeViewItemStyle}"
            ItemsSource="{Binding ViewModel.FlowsList}">
            <!--  Set SelectedItem on change  -->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding ViewModel.SelectedCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding ViewModel.DoubleClickCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <i:Interaction.Behaviors>
                <converters:TreeViewDragDropBehavior />
            </i:Interaction.Behaviors>


            <TreeView.Resources>




                <!--  ********************************  -->
                <!--  ***                          ***  -->
                <!--  ***          Flow            ***  -->
                <!--  ***                          ***  -->
                <!--  ********************************  -->
                <!--<HierarchicalDataTemplate DataType="{x:Type models:Flow}" ItemsSource="{Binding FlowSteps, Converter={StaticResource TreeviewOrdering}, ConverterParameter=OrderingNum}">-->
                <HierarchicalDataTemplate DataType="{x:Type models:Flow}">
                    <Border
                        BorderBrush="White"
                        BorderThickness="1"
                        CornerRadius="5">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.4*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="0.1*" />
                            </Grid.ColumnDefinitions>


                            <!--<ui:ImageIcon Source="pack://application:,,,/Assets/cursor.png" MaxHeight="20" MaxWidth="14"/>-->
                            <ui:TextBlock
                                Grid.Column="0"
                                Padding="10"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}">
                                <Run Text="{Binding Id}" />
                                <Run Text="." />
                            </ui:TextBlock>

                            <ui:TextBlock
                                Grid.Column="2"
                                Padding="10"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                Text="{Binding Name}" />


                            <!--  Delete  -->
                            <ui:Button
                                x:Name="TreeViewItemFlowDeleteButton"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="2"
                                Grid.ColumnSpan="2"
                                Margin="5"
                                Padding="5"
                                HorizontalAlignment="Right"
                                Background="#323437"
                                BorderBrush="#3D3F42">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="5" />
                                    </Style>
                                </Button.Resources>
                                <ui:Button.Style>
                                    <Style TargetType="{x:Type ui:Button}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="true">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ui:Button.Style>
                                <icons:BootstrapIcon Icon="Trash" />
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.FlowButtonDeleteClickCommand}">
                                            <i:InvokeCommandAction.CommandParameter>
                                                <Binding Path="" />
                                            </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ui:Button>
                        </Grid>
                    </Border>


                    <HierarchicalDataTemplate.ItemsSource>
                        <MultiBinding Converter="{StaticResource GroupedCollectionConverter}">
                            <Binding Path="FlowParameter" />
                            <Binding Path="FlowStep" />
                        </MultiBinding>
                    </HierarchicalDataTemplate.ItemsSource>


                </HierarchicalDataTemplate>

                <!--  ********************************  -->
                <!--  ***                          ***  -->
                <!--  ***      Flow Parameter      ***  -->
                <!--  ***                          ***  -->
                <!--  ********************************  -->
                <HierarchicalDataTemplate DataType="{x:Type models:FlowParameter}" ItemsSource="{Binding ChildrenFlowParameters, Converter={StaticResource TreeviewOrdering}, ConverterParameter=OrderingNum}">
                    <!--  TreeViewItem ContentPresenter Presentations  -->
                    <ContentPresenter Content="{Binding}">
                        <ContentPresenter.Resources>


                            <!--  Child TreeViewItem Existing ContentPresenter (FLOW_PARAMETERS)  -->
                            <DataTemplate x:Key="FLOW_PARAMETERS">
                                <Border
                                    BorderBrush="White"
                                    BorderThickness="1"
                                    CornerRadius="5">
                                    <ui:TextBlock
                                        Padding="10"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                        Text="{Binding Name}" />
                                </Border>
                            </DataTemplate>

                            <!--  Child TreeViewItem Existing ContentPresenter (NEW)  -->
                            <DataTemplate x:Key="NEW">
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Border
                                        BorderBrush="White"
                                        BorderThickness="1"
                                        CornerRadius="5">
                                        <ui:Button
                                            Padding="10"
                                            HorizontalAlignment="Center"
                                            Content="Add">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonNewParameterClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>

                                        <!--<ui:Button
                                        Padding="10"
                                        HorizontalAlignment="Center"
                                        Content="Paste"
                                        Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.PasteVisibility}">
                                        <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonPasteClickCommand}">
                                        <i:InvokeCommandAction.CommandParameter>
                                        <Binding Path="" />
                                        </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        </ui:Button>-->
                                    </Border>
                                </StackPanel>
                            </DataTemplate>

                            <!--  Child TreeViewItem Existing ContentPresenter (NEW)  -->
                            <DataTemplate x:Key="TEMPLATE_SEARCH_AREA">
                                <Border
                                    BorderBrush="White"
                                    BorderThickness="1"
                                    CornerRadius="5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />

                                            <ColumnDefinition Name="columnToHide">
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="{x:Type ColumnDefinition}">
                                                        <Setter Property="Width" Value="0" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="false">
                                                                <Setter Property="Width" Value="Auto" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>

                                            <ColumnDefinition Name="columnToHide2">
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="{x:Type ColumnDefinition}">
                                                        <Setter Property="Width" Value="0" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="false">
                                                                <Setter Property="Width" Value="Auto" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>

                                            <ColumnDefinition Name="columnToHide3">
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="{x:Type ColumnDefinition}">
                                                        <Setter Property="Width" Value="0" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="false">
                                                                <Setter Property="Width" Value="Auto" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>

                                        <ui:TextBlock
                                            Grid.Row="0"
                                            Grid.RowSpan="2"
                                            Grid.Column="0"
                                            Padding="10"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}">
                                            <Run Text="{Binding Id}" />
                                            <Run Text="." />
                                        </ui:TextBlock>

                                        <ui:TextBlock
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Padding="10"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                            Text="{Binding Name}" />

                                        <ui:TextBlock
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Padding="10"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                            Text="{Binding Type}" />

                                        <!--  Arrows Up/Down  -->
                                        <!--
                                        <ui:Button
                                        Grid.Column="2"
                                        Margin="5"
                                        HorizontalAlignment="Right">
                                        <icons:BootstrapIcon Icon="ArrowUpShort" />
                                        <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonUpClickCommand}">
                                        <i:InvokeCommandAction.CommandParameter>
                                        <Binding Path="" />
                                        </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        </ui:Button>
                                        <ui:Button
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Margin="5"
                                        HorizontalAlignment="Right">
                                        <icons:BootstrapIcon Icon="ArrowDownShort" />
                                        <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonDownClickCommand}">
                                        <i:InvokeCommandAction.CommandParameter>
                                        <Binding Path="" />
                                        </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        </ui:Button>

                                        -->
                                        <!--  Copy  -->
                                        <!--
                                        <ui:Button
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.Column="4"
                                        Margin="5"
                                        Padding="5"
                                        HorizontalAlignment="Right">
                                        <icons:BootstrapIcon Icon="Copy" />
                                        <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonCopyClickCommand}">
                                        <i:InvokeCommandAction.CommandParameter>
                                        <Binding Path="" />
                                        </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        </ui:Button>-->

                                        <!--  Delete  -->
                                        <ui:Button
                                            Grid.Row="0"
                                            Grid.RowSpan="2"
                                            Grid.Column="3"
                                            Margin="5"
                                            Padding="5"
                                            HorizontalAlignment="Right">
                                            <icons:BootstrapIcon Icon="Trash" />
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.FlowParameterButtonDeleteClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ContentPresenter.Resources>



                        <!--  ContentPresenter Triggers  -->
                        <ContentPresenter.Style>
                            <Style TargetType="{x:Type ContentPresenter}">
                                <!--  Default  -->
                                <Setter Property="ContentTemplate" Value="{StaticResource FLOW_PARAMETERS}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:FlowParameterTypesEnum.FLOW_PARAMETERS}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource FLOW_PARAMETERS}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:FlowParameterTypesEnum.TEMPLATE_SEARCH_AREA}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource TEMPLATE_SEARCH_AREA}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:FlowParameterTypesEnum.NEW}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource NEW}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentPresenter.Style>

                    </ContentPresenter>
                </HierarchicalDataTemplate>




                <!--  ********************************  -->
                <!--  ***                          ***  -->
                <!--  ***        Flow Steps        ***  -->
                <!--  ***                          ***  -->
                <!--  ********************************  -->
                <!--<HierarchicalDataTemplate DataType="{x:Type models:FlowStep}" ItemsSource="{Binding ChildrenFlowSteps, Converter={StaticResource TreeviewOrdering}, ConverterParameter=OrderingNum}">-->
                <HierarchicalDataTemplate DataType="{x:Type models:FlowStep}">
                    <HierarchicalDataTemplate.ItemsSource>
                        <MultiBinding Converter="{StaticResource GroupedCollectionConverter}">
                            <Binding
                                Converter="{StaticResource TreeviewOrdering}"
                                ConverterParameter="OrderingNum"
                                Path="ChildrenFlowSteps" />
                            <Binding Path="SubFlow" />
                        </MultiBinding>
                    </HierarchicalDataTemplate.ItemsSource>
                    <Border
                        BorderBrush="White"
                        BorderThickness="1"
                        CornerRadius="5">

                        <!--  TreeViewItem ContentPresenter Presentations  -->
                        <ContentPresenter Content="{Binding}">
                            <ContentPresenter.Resources>


                                <!--  Child TreeViewItem Existing ContentPresenter (Existing Flow Step)  -->
                                <DataTemplate x:Key="FlowStepExisting">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />

                                            <ColumnDefinition Name="columnToHide">
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="{x:Type ColumnDefinition}">
                                                        <Setter Property="Width" Value="0" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="false">
                                                                <Setter Property="Width" Value="Auto" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>

                                            <ColumnDefinition Name="columnToHide2">
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="{x:Type ColumnDefinition}">
                                                        <Setter Property="Width" Value="0" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="false">
                                                                <Setter Property="Width" Value="Auto" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>

                                            <ColumnDefinition Name="columnToHide3">
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="{x:Type ColumnDefinition}">
                                                        <Setter Property="Width" Value="0" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="false">
                                                                <Setter Property="Width" Value="Auto" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>

                                        <ui:TextBlock
                                            Grid.Row="0"
                                            Grid.RowSpan="2"
                                            Grid.Column="0"
                                            Padding="10"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}">
                                            <Run Text="{Binding Id}" />
                                            <Run Text="." />
                                        </ui:TextBlock>

                                        <ui:TextBlock
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Padding="10"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                            Text="{Binding Name}" />

                                        <ui:TextBlock
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Padding="10"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                            Text="{Binding Type}" />

                                        <!--  Arrows Up/Down  -->
                                        <ui:Button
                                            Grid.Column="2"
                                            Margin="5"
                                            HorizontalAlignment="Right">
                                            <icons:BootstrapIcon Icon="ArrowUpShort" />
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonUpClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>
                                        <ui:Button
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Margin="5"
                                            HorizontalAlignment="Right">
                                            <icons:BootstrapIcon Icon="ArrowDownShort" />
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonDownClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>

                                        <!--  Copy  -->
                                        <ui:Button
                                            Grid.Row="0"
                                            Grid.RowSpan="2"
                                            Grid.Column="4"
                                            Margin="5"
                                            Padding="5"
                                            HorizontalAlignment="Right">
                                            <icons:BootstrapIcon Icon="Copy" />
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonCopyClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>

                                        <!--  Delete  -->
                                        <ui:Button
                                            Grid.Row="0"
                                            Grid.RowSpan="2"
                                            Grid.Column="3"
                                            Margin="5"
                                            Padding="5"
                                            HorizontalAlignment="Right">
                                            <icons:BootstrapIcon Icon="Trash" />
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.FlowStepButtonDeleteClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>
                                    </Grid>
                                </DataTemplate>


                                <!--  Child TreeViewItem Existing ContentPresenter (Existing Flow Step) Template Search  -->
                                <DataTemplate x:Key="FlowStepExistingTemplateSearch">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />

                                            <ColumnDefinition Name="columnToHide">
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="{x:Type ColumnDefinition}">
                                                        <Setter Property="Width" Value="0" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="false">
                                                                <Setter Property="Width" Value="Auto" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>

                                            <ColumnDefinition Name="columnToHide2">
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="{x:Type ColumnDefinition}">
                                                        <Setter Property="Width" Value="0" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="false">
                                                                <Setter Property="Width" Value="Auto" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>


                                            <ColumnDefinition Name="columnToHide3">
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="{x:Type ColumnDefinition}">
                                                        <Setter Property="Width" Value="0" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.IsLocked}" Value="false">
                                                                <Setter Property="Width" Value="Auto" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="1*" />

                                        </Grid.RowDefinitions>

                                        <StackPanel Grid.RowSpan="2" Orientation="Horizontal">
                                            <ui:TextBlock
                                                Padding="10"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}">
                                                <Run Text="{Binding Id}" />
                                                <Run Text="." />
                                            </ui:TextBlock>
                                            <Image
                                                Width="Auto"
                                                Height="Auto"
                                                MaxWidth="50"
                                                MaxHeight="50"
                                                Source="{Binding TemplateImage}"
                                                Stretch="Uniform" />
                                        </StackPanel>

                                        <ui:TextBlock
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Padding="10"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                            Text="{Binding Name}" />

                                        <ui:TextBlock
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Padding="10"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                            Text="{Binding Type}" />

                                        <!--  Arrows Up/Down  -->
                                        <ui:Button
                                            Grid.Column="2"
                                            Margin="5"
                                            HorizontalAlignment="Right">
                                            <icons:BootstrapIcon Icon="ArrowUpShort" />
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonUpClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>
                                        <ui:Button
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Margin="5"
                                            HorizontalAlignment="Right">
                                            <icons:BootstrapIcon Icon="ArrowDownShort" />
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonDownClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>

                                        <!--  Copy  -->
                                        <ui:Button
                                            Grid.Row="0"
                                            Grid.RowSpan="2"
                                            Grid.Column="4"
                                            Margin="5"
                                            Padding="5"
                                            HorizontalAlignment="Right">
                                            <icons:BootstrapIcon Icon="Copy" />
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonCopyClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>
                                        <!--  Delete  -->
                                        <ui:Button
                                            Grid.Row="0"
                                            Grid.RowSpan="2"
                                            Grid.Column="3"
                                            Margin="5"
                                            Padding="5"
                                            HorizontalAlignment="Right">
                                            <icons:BootstrapIcon Icon="Trash" />
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.FlowStepButtonDeleteClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>
                                    </Grid>
                                </DataTemplate>




                                <!--  Child TreeViewItem New/Paste ContentPresenter  (New Flow Step / Paste)  -->
                                <DataTemplate x:Key="FlowStepNew">
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">

                                        <ui:Button
                                            Padding="10"
                                            HorizontalAlignment="Center"
                                            Content="Add">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonNewClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>

                                        <ui:Button
                                            Padding="10"
                                            HorizontalAlignment="Center"
                                            Content="Paste"
                                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.PasteVisibility}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TreeViewUserControl}}, Path=ViewModel.ButtonPasteClickCommand}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <Binding Path="" />
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ui:Button>
                                    </StackPanel>
                                </DataTemplate>



                                <!--  Child TreeViewItem Success/Fail ContentPresenter  (Success/Fail Flow Step)  -->
                                <DataTemplate x:Key="FlowStepSuccessFail">
                                    <ui:TextBlock
                                        Grid.Column="1"
                                        Padding="10"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                        Text="{Binding Name}" />
                                </DataTemplate>
                            </ContentPresenter.Resources>



                            <!--  ContentPresenter Triggers  -->
                            <ContentPresenter.Style>
                                <Style TargetType="{x:Type ContentPresenter}">
                                    <!--  Default  -->
                                    <Setter Property="ContentTemplate" Value="{StaticResource FlowStepExisting}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:FlowStepTypesEnum.FLOW_STEPS}">
                                            <Setter Property="ContentTemplate" Value="{StaticResource FlowStepSuccessFail}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:FlowStepTypesEnum.NEW}">
                                            <Setter Property="ContentTemplate" Value="{StaticResource FlowStepNew}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:FlowStepTypesEnum.FAILURE}">
                                            <Setter Property="ContentTemplate" Value="{StaticResource FlowStepSuccessFail}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:FlowStepTypesEnum.SUCCESS}">
                                            <Setter Property="ContentTemplate" Value="{StaticResource FlowStepSuccessFail}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:FlowStepTypesEnum.TEMPLATE_SEARCH}">
                                            <Setter Property="ContentTemplate" Value="{StaticResource FlowStepExistingTemplateSearch}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:FlowStepTypesEnum.WAIT_FOR_TEMPLATE}">
                                            <Setter Property="ContentTemplate" Value="{StaticResource FlowStepExistingTemplateSearch}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Style>

                        </ContentPresenter>
                    </Border>

                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>
    </Grid>
</UserControl>
