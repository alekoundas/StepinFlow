<Window
    x:Class="StepinFlow.Views.Windows.ScreenshotSelectionWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behavior="clr-namespace:StepinFlow.Behavior"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:StepinFlow.Views.Windows"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="ScreenshotSelectionWindow"
    Width="800"
    Height="450"
    d:DataContext="{d:DesignInstance local:ScreenshotSelectionWindow,
    IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Closing="OnClose"
    mc:Ignorable="d">


    <Grid>

        <!--  Screenshot Display  -->
        <Image
            behavior:ActualImageSizeBehavior.BoundHeight="{Binding ViewModel.ImageActualHeight, Mode=TwoWay}"
            behavior:ActualImageSizeBehavior.BoundWidth="{Binding ViewModel.ImageActualWidth, Mode=TwoWay}"
            behavior:ActualImageSizeBehavior.MonitorSize="True"
            Source="{Binding ViewModel.Screenshot}"
            Stretch="Fill" />
        <!--  Crop Selection  -->
        <Canvas Background="Transparent">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown">
                    <i:InvokeCommandAction Command="{Binding ViewModel.CanvasMouseDownCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseMove">
                    <i:InvokeCommandAction Command="{Binding ViewModel.CanvasMouseMoveCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseUp">
                    <i:InvokeCommandAction Command="{Binding ViewModel.CanvasMouseUpCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <Rectangle
                Canvas.Left="{Binding ViewModel.RectangleLeft, Mode=TwoWay}"
                Canvas.Top="{Binding ViewModel.RectangleTop, Mode=TwoWay}"
                Width="{Binding ViewModel.RectangleWidth, Mode=TwoWay}"
                Height="{Binding ViewModel.RectangleHeight, Mode=TwoWay}"
                Stroke="Red"
                StrokeThickness="2"
                Visibility="{Binding ViewModel.RectangleVisibility, Mode=TwoWay}" />
        </Canvas>

        <!--  Controls Panel  -->
        <StackPanel
            Margin="10"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Background="{DynamicResource ApplicationBackgroundBrush}"
            Orientation="Horizontal">
            <ui:Button
                Width="80"
                Margin="5"
                Content="Import"
                Visibility="{Binding ViewModel.ImportVisibility}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ViewModel.ButtonImportClickCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ui:Button>
            <ui:Button
                Width="80"
                Margin="5"
                Content="Save">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ViewModel.ButtonSaveClickCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ui:Button>
            <ui:Button
                Width="80"
                Margin="5"
                Content="Undo">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ViewModel.ButtonUndoClickCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ui:Button>
            <ui:Button
                Width="80"
                Margin="5"
                Content="Redo">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ViewModel.ButtonRedoClickCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ui:Button>
        </StackPanel>
    </Grid>
</Window>
