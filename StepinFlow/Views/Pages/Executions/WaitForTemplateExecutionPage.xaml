<Page
    x:Class="StepinFlow.Views.Pages.Executions.WaitForTemplateExecutionPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:controls="clr-namespace:StepinFlow.Views.UserControls"
    xmlns:converters="clr-namespace:StepinFlow.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="clr-namespace:Model.Enums;assembly=Model"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:StepinFlow.Views.Pages.Executions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="WaitForTemplateExecutionPage"
    d:DataContext="{d:DesignInstance local:WaitForTemplateExecutionPage,
    IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:ImageNullConverter x:Key="ImageNullConverter" />
    </Page.Resources>

    <Grid VerticalAlignment="Top">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>




        <StackPanel Grid.Column="1">
            <Label>Configure template search:</Label>

            <!--  Name  -->
            <StackPanel
                MinWidth="200"
                Margin="0,0,0,20"
                HorizontalAlignment="Left">
                <Label>Set Name:</Label>
                <TextBox IsEnabled="False" Text="{Binding ViewModel.Execution.FlowStep.Name, Mode=TwoWay}" />
            </StackPanel>

            <!--  FlowParameter  -->
            <StackPanel
                MinWidth="200"
                Margin="0,0,0,20"
                HorizontalAlignment="Left">
                <Label>Select search area from parameters(leave empty for all monitor search)</Label>
                <ComboBox
                    VerticalAlignment="Center"
                    IsEnabled="False"
                    ItemsSource="{Binding ViewModel.FlowParameters}"
                    SelectedItem="{Binding ViewModel.SelectedFlowParameter, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" />
                                <TextBlock Text=" - " />
                                <TextBlock Text="{Binding Path=TemplateSearchAreaType}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>


            <!--  TemplateSearchAreaTypesEnum  -->
            <StackPanel
                MinWidth="200"
                Margin="0,0,0,20"
                HorizontalAlignment="Left">
                <Label>Select match mode:</Label>
                <ComboBox
                    VerticalAlignment="Center"
                    IsEnabled="False"
                    ItemsSource="{Binding ViewModel.MatchModes}"
                    SelectedItem="{Binding ViewModel.Execution.FlowStep.TemplateMatchMode, Mode=TwoWay}" />
            </StackPanel>


            <!--  Image import  -->
            <!--<StackPanel
            MinWidth="200"
            Margin="0,0,0,20"
            HorizontalAlignment="Left">
            <Label>Select image for search:</Label>
            <StackPanel Orientation="Horizontal">

            <Button Content="Open file">
            <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
            <i:InvokeCommandAction Command="{Binding ViewModel.ButtonOpenFileClickCommand}" />
            </i:EventTrigger>
            </i:Interaction.Triggers>
            </Button>
            <Button Content="Take screenshot">
            <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
            <i:InvokeCommandAction Command="{Binding ViewModel.ButtonTakeScreenshotClickCommand}" />
            </i:EventTrigger>
            </i:Interaction.Triggers>
            </Button>

            </StackPanel>
            </StackPanel>-->


            <!--  Template Image  -->
            <Image
                MaxWidth="100"
                MaxHeight="100"
                Source="{Binding ViewModel.Execution.FlowStep.TemplateImage, Converter={StaticResource ImageNullConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding ViewModel.TemplateImageDoubleClickCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>

            <!--  Accuracy  -->
            <StackPanel
                MinWidth="200"
                Margin="0,0,0,20"
                HorizontalAlignment="Left">
                <Label>Select minimum accuracy:</Label>
                <TextBox IsEnabled="False" Text="{Binding ViewModel.Execution.FlowStep.Accuracy, Mode=TwoWay}" />

                <Label>Result:</Label>
                <TextBox IsEnabled="False" Text="{Binding ViewModel.Execution.ResultAccuracy, Mode=TwoWay}" />
            </StackPanel>


            <!--  WaitFor  -->
            <Label>Retry search after:</Label>
            <controls:TimeSpanInputUserControl x:Name="TimeInputControl" IsEnabled="False" />




            <!--  Test  -->
            <Label>Test:</Label>
            <Button Content="Test">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ViewModel.ButtonTestClickCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <!--  Result image  -->
            <Image Source="{Binding ViewModel.TestResultImage, Converter={StaticResource ImageNullConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding ViewModel.ResultImageDoubleClickCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>



        </StackPanel>


    </Grid>
</Page>