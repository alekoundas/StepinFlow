<Page
    x:Class="StepinFlow.Views.Pages.ExecutionPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:UserControls="clr-namespace:StepinFlow.Views.UserControls"
    xmlns:behavior="clr-namespace:StepinFlow.Behavior"
    xmlns:converters="clr-namespace:StepinFlow.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="clr-namespace:Model.Enums;assembly=Model"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:icons="https://github.com/helluvamatt/BootstrapIcons.Wpf/"
    xmlns:local="clr-namespace:StepinFlow.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Model.Models;assembly=Model"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vm="clr-namespace:StepinFlow.ViewModels.Pages"
    Title="ExecutionPage"
    d:DataContext="{d:DesignInstance local:ExecutionPage,
    IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ScrollViewer.CanContentScroll="False"
    mc:Ignorable="d">

    <!--  change tect color on hover?  -->
    <Page.Resources>
        <converters:ImageNullConverter x:Key="ImageNullConverter" />
        <converters:TreeviewOrdering x:Key="TreeviewOrdering" />
        <behavior:ScrollToSelectedListBoxItemBehavior x:Key="ListBoxOrdering" />


        <Style x:Key="_ListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                            Name="_Border"
                            Margin="3"
                            Padding="2"
                            Background="#303236"
                            BorderBrush="Black"
                            BorderThickness="2"
                            CornerRadius="5"
                            SnapsToDevicePixels="true">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="_Border" Property="Background" Value="#303236" />
                            </Trigger>

                            <DataTrigger Binding="{Binding Result}" Value="{x:Static enum:ExecutionResultEnum.FAIL}">
                                <!--<Setter TargetName="_Border" Property="Visibility" Value="Collapsed" />-->
                                <Setter TargetName="_Border" Property="Background" Value="#802426" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Result}" Value="{x:Static enum:ExecutionResultEnum.SUCCESS}">
                                <!--<Setter TargetName="_Border" Property="Visibility" Value="Collapsed" />-->
                                <Setter TargetName="_Border" Property="Background" Value="#1a5b1f" />
                            </DataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!--  ExecutionResultEnum  -->
        <ObjectDataProvider
            x:Key="ExecutionResultEnum"
            MethodName="GetValues"
            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:ExecutionResultEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

    </Page.Resources>




    <Grid VerticalAlignment="Top">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="0.6*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" MinHeight="100" />
            <RowDefinition Height="100*" MinHeight="200" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>




        <!--  Flows Dropdown  -->
        <ComboBox
            Name="ProcessList"
            Margin="0,0,0,20"
            ItemsSource="{Binding ViewModel.ComboBoxFlows}"
            SelectedItem="{Binding ViewModel.ComboBoxSelectedFlow}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=Id}" />
                        <TextBlock Text=" - " />
                        <TextBlock Text="{Binding Path=Name}" />
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ViewModel.ComboBoxSelectionChangedFlowCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ComboBox>

        <!--  Execuution Details  -->
        <Border
            Grid.Row="1"
            Margin="0,0,20,0"
            Padding="10,20,0,0"
            Background="#272727"
            BorderBrush="#C4C4C4"
            BorderThickness="2"
            CornerRadius="10">
            <Border.Effect>
                <DropShadowEffect Opacity="1" ShadowDepth="5" />
            </Border.Effect>
            <ScrollViewer>

                <Grid VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="0.6*" />
                        <ColumnDefinition Width="0.6*" />
                        <ColumnDefinition Width="0.1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>


                    <!--  Title  -->
                    <!--<TextBlock
                    Grid.Column="3"
                    Grid.ColumnSpan="2"
                    Text="{Binding ViewModel.Flow.Id}" />-->


                    <!--  Status  -->
                    <TextBlock Grid.Column="1" Text="Status:" />
                    <TextBlock Grid.Column="2" Text="{Binding ViewModel.Status}" />

                    <!--  Run for  -->
                    <TextBlock Grid.Column="3" Text="Run for:" />
                    <TextBlock Grid.Column="4" Text="{Binding ViewModel.RunFor}" />

                    <!--  Current step  -->
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="1"
                        Text="Current step:" />
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="2"
                        Text="{Binding ViewModel.CurrentStep}" />

                    <!--  Play Button  -->
                    <Button
                        Grid.RowSpan="2"
                        Grid.Column="5"
                        Margin="0,0,0,0"
                        Padding="10"
                        HorizontalAlignment="Center"
                        Content="start">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ViewModel.ButtonStartClickCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <!--  Stop Button  -->
                    <Button
                        Grid.RowSpan="2"
                        Grid.Column="6"
                        Margin="0,0,0,0"
                        Padding="10"
                        HorizontalAlignment="Center"
                        Content="stop">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ViewModel.ButtonStopClickCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>


                </Grid>
            </ScrollViewer>
        </Border>




        <!--  Frame  -->
        <Border
            Grid.Row="2"
            Margin="0,5,20,0"
            Padding="10,10,0,0"
            Background="#272727"
            BorderBrush="#C4C4C4"
            BorderThickness="2"
            CornerRadius="10">
            <Border.Effect>
                <DropShadowEffect Opacity="1" ShadowDepth="5" />
            </Border.Effect>
            <ScrollViewer>
                <UserControls:FrameDetailUserControl x:Name="FrameDetailUserControl" Padding="20,20,20,20" />
            </ScrollViewer>
        </Border>

        <!--  TreeView  -->
        <Border
            Grid.Row="1"
            Grid.RowSpan="4"
            Grid.Column="1"
            Margin="0,0,0,20"
            Background="#272727"
            BorderBrush="#C4C4C4"
            BorderThickness="2"
            CornerRadius="10">
            <Border.Effect>
                <DropShadowEffect Opacity="1" ShadowDepth="5" />
            </Border.Effect>
            <UserControls:TreeViewUserControl x:Name="TreeViewControl" />

        </Border>



        <!--  Execution History  -->
        <StackPanel
            Grid.Row="4"
            Margin="0,0,0,10"
            Orientation="Vertical">
            <TextBlock
                Grid.Row="3"
                Margin="0,5,0,5"
                Text="Execution history" />

            <StackPanel Orientation="Horizontal">
                <ComboBox
                    VerticalAlignment="Top"
                    ItemsSource="{Binding ViewModel.ComboBoxExecutionHistories}"
                    SelectedItem="{Binding ViewModel.ComboBoxSelectedExecutionHistory}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ComboBoxSelectionChangedExecutionCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Id}" />
                                <TextBlock Text=" - " />
                                <TextBlock Text="{Binding Path=StartedOn}" />
                            </StackPanel>
                        </DataTemplate>

                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ui:Button
                    MaxHeight="37"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top">
                    <icons:BootstrapIcon Icon="Trash" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ButtonDeleteClickCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ui:Button>
            </StackPanel>
        </StackPanel>

        <!--  ListBox  -->
        <Border
            Grid.Row="5"
            Grid.ColumnSpan="2"
            Margin="0,0,0,15"
            Padding="5,5,5,5"
            Background="#272727"
            BorderBrush="#C4C4C4"
            BorderThickness="1"
            CornerRadius="10">
            <Border.Effect>
                <DropShadowEffect Opacity="1" ShadowDepth="5" />
            </Border.Effect>


            <StackPanel>
                <ListBox ItemContainerStyle="{DynamicResource _ListBoxItemStyle}" ItemsSource="{Binding ViewModel.ListBoxExecutions}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ListBoxSelectedItemChangedCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behavior:ScrollToSelectedListBoxItemBehavior />
                    </i:Interaction.Behaviors>

                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock>
                                    <Run Text="Execution ID" />
                                    <Run Text="{Binding Id}" />
                                </TextBlock>
                                <TextBlock>
                                    <Run Text="Flow Step ID" />
                                    <Run Text="{Binding FlowStepId}" />
                                </TextBlock>
                                <!--<TextBlock Text="{Binding FlowId}" />-->
                                <TextBlock Margin="0,0,0,0" Text="{Binding FlowStep.Type}" />

                                <Image
                                    MaxWidth="100"
                                    MaxHeight="50"
                                    Source="{Binding FlowStep.TemplateImage, Converter={StaticResource ImageNullConverter}}" />

                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

            </StackPanel>

        </Border>
    </Grid>
</Page>


