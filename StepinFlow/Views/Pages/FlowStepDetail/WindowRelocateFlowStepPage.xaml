<Page
    x:Class="StepinFlow.Views.Pages.FlowStepDetail.WindowRelocateFlowStepPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="clr-namespace:Model.Enums;assembly=Model"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:StepinFlow.Views.Pages.FlowStepDetail"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="WindowRelocateFlowStepPage"
    d:DataContext="{d:DesignInstance local:WindowRelocateFlowStepPage,
    IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">


    <Grid VerticalAlignment="Top">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>


        <StackPanel>
            <Label>Configure application window location:</Label>


            <!--  Name  -->
            <StackPanel
                MinWidth="200"
                Margin="0,0,0,20"
                HorizontalAlignment="Left">
                <Label>Set Name:</Label>
                <TextBox Text="{Binding ViewModel.FlowStep.Name, Mode=TwoWay}" />
                <TextBlock
                    Margin="0,5,0,0"
                    Foreground="Gold"
                    Text="{Binding ViewModel.ValidationErrors[FlowStep.Name], FallbackValue=''}" />
            </StackPanel>


            <!--  ProcessName  -->
            <StackPanel
                MinWidth="200"
                Margin="0,0,0,20"
                HorizontalAlignment="Left">
                <Label>Select application window to relocate:</Label>
                <StackPanel Orientation="Horizontal">
                    <ComboBox ItemsSource="{Binding ViewModel.ProcessList}" SelectedItem="{Binding ViewModel.FlowStep.ProcessName}" />
                    <Button Margin="20,0,0,0" Content="Record">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ViewModel.ButtonRecordClickCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </StackPanel>
                <TextBlock
                    Margin="0,5,0,0"
                    Foreground="Gold"
                    Text="{Binding ViewModel.ValidationErrors[FlowStep.ProcessName], FallbackValue=''}" />
            </StackPanel>



            <Label Grid.Row="1" Margin="0,40,0,0">Set window location.</Label>
            <!--  X  -->
            <StackPanel
                MinWidth="200"
                Margin="0,0,0,20"
                HorizontalAlignment="Left">
                <Label>X:</Label>
                <TextBox Text="{Binding ViewModel.FlowStep.LocationX, Mode=TwoWay}" />
                <TextBlock
                    Margin="0,5,0,0"
                    Foreground="Gold"
                    Text="{Binding ViewModel.ValidationErrors[FlowStep.LocationX], FallbackValue=''}" />
            </StackPanel>

            <!--  Y  -->
            <StackPanel
                MinWidth="200"
                Margin="0,0,0,20"
                HorizontalAlignment="Left">
                <Label>Y:</Label>
                <TextBox Text="{Binding ViewModel.FlowStep.LocationY, Mode=TwoWay}" />
                <TextBlock
                    Margin="0,5,0,0"
                    Foreground="Gold"
                    Text="{Binding ViewModel.ValidationErrors[FlowStep.LocationY], FallbackValue=''}" />
            </StackPanel>



            <!--  Test Button  -->
            <StackPanel
                MinWidth="200"
                Margin="0,0,0,20"
                HorizontalAlignment="Left">
                <Button Content="Test">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ButtonTestClickCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>


        </StackPanel>
    </Grid>
</Page>